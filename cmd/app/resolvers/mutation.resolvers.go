package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"

	model "github.com/ToroEtele/go-graphql-api/cmd/app/domain"
	model1 "github.com/ToroEtele/go-graphql-api/cmd/app/domain/dao"
	"github.com/ToroEtele/go-graphql-api/graph"
)

// CreateProduct is the resolver for the createProduct field.
func (r *mutationResolver) CreateProduct(ctx context.Context, input model.CreateProductInput) (*model1.Product, error) {
	panic(fmt.Errorf("not implemented: CreateProduct - createProduct"))
}

// UpdateProduct is the resolver for the updateProduct field.
func (r *mutationResolver) UpdateProduct(ctx context.Context, input model.UpdateProductInput) (*model1.Product, error) {
	panic(fmt.Errorf("not implemented: UpdateProduct - updateProduct"))
}

// DeleteProduct is the resolver for the deleteProduct field.
func (r *mutationResolver) DeleteProduct(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteProduct - deleteProduct"))
}

// RefreshToken is the resolver for the refreshToken field.
func (r *mutationResolver) RefreshToken(ctx context.Context) (*string, error) {
	panic(fmt.Errorf("not implemented: RefreshToken - refreshToken"))
}

// SignOut is the resolver for the signOut field.
func (r *mutationResolver) SignOut(ctx context.Context) (*model.Status, error) {
	panic(fmt.Errorf("not implemented: SignOut - signOut"))
}

// SignIn is the resolver for the signIn field.
func (r *mutationResolver) SignIn(ctx context.Context, input model.SignInInput) (*string, error) {
	panic(fmt.Errorf("not implemented: SignIn - signIn"))
}

// SignInGoogle is the resolver for the signInGoogle field.
func (r *mutationResolver) SignInGoogle(ctx context.Context, token string) (*string, error) {
	panic(fmt.Errorf("not implemented: SignInGoogle - signInGoogle"))
}

// SignUp is the resolver for the signUp field.
func (r *mutationResolver) SignUp(ctx context.Context, input model.SignUpInput) (*string, error) {
	panic(fmt.Errorf("not implemented: SignUp - signUp"))
}

// ForgotPassword is the resolver for the forgotPassword field.
func (r *mutationResolver) ForgotPassword(ctx context.Context, email string) (*model.Status, error) {
	panic(fmt.Errorf("not implemented: ForgotPassword - forgotPassword"))
}

// ResetPassword is the resolver for the resetPassword field.
func (r *mutationResolver) ResetPassword(ctx context.Context, token string, password string) (*model.Status, error) {
	panic(fmt.Errorf("not implemented: ResetPassword - resetPassword"))
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
