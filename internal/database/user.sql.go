// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: user.sql

package database

import (
	"context"
)

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id, email, name, password, createdat, updatedat, isadmin FROM user WHERE id = $1
`

func (q *Queries) GetUserByEmail(ctx context.Context) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByEmail)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Name,
		&i.Password,
		&i.Createdat,
		&i.Updatedat,
		&i.Isadmin,
	)
	return i, err
}

const getUserById = `-- name: GetUserById :one
SELECT id, email, name, password, createdat, updatedat, isadmin FROM user WHERE id = $1
`

func (q *Queries) GetUserById(ctx context.Context) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserById)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Name,
		&i.Password,
		&i.Createdat,
		&i.Updatedat,
		&i.Isadmin,
	)
	return i, err
}
